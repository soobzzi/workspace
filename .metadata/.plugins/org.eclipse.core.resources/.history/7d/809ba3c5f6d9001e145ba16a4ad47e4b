package com.model2.mvc.service.product.test;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.model2.mvc.service.domain.Product;
import com.model2.mvc.service.product.ProductService;


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:config/commonservice.xml"})
public class ProductServiceTest {
	
	
	@Autowired
	@Qualifier("productServiceImpl")
	private ProductService productService;
	
	//@Test
	public void testAddProduct() throws Exception{
		
		Product product = new Product();
			
		product.setProdName("¡§«—¿Ã¿«∏∆∫œ");
		product.setProdDetail("¡ﬂ∞Ìa±ﬁ");
		product.setManuDate("20201010");
		product.setPrice(100);
		product.setFileName("macbookfile");
	
		
		productService.addProduct(product);
		
		product = productService.getProduct("¡§«—¿Ã¿«∏∆∫œ");
		
		
		System.out.println(product);
		
		Assert.assertEquals("¡§«—¿Ã¿«∏∆∫œ", product.getProdName());
		Assert.assertEquals("¡ﬂ∞Ìa±ﬁ", product.getProdDetail());
		Assert.assertEquals("20201010", product.getManuDate());
		Assert.assertEquals(100, product.getPrice());
		Assert.assertEquals("macbookfile", product.getFileName());
		
		
		
	}
	
	//@Test
	public void testGetProduct() throws Exception{
		
		Product product = new Product();
		
		product = productService.getProduct("¡§«—¿Ã¿«∏∆∫œ");
		
		System.out.println("getget"+product);
		
		Assert.assertEquals("¡§«—¿Ã¿«∏∆∫œ", product.getProdName());
		Assert.assertEquals("¡ﬂ∞Ìa±ﬁ", product.getProdDetail());
		Assert.assertEquals("20201010", product.getManuDate());
		Assert.assertEquals(100, product.getPrice());
		Assert.assertEquals("macbookfile", product.getFileName());
		
		Assert.assertNotNull(productService.getProduct("¿⁄¿¸∞≈"));
	}
	
	@Test
	public void testUpdateProduct() throws Exception{
		
		Product product = productService.getProduct("¡§«—¿Ã¿«∏∆∫œ");
		
		System.out.println(product);
		
		Assert.assertNotNull(product);
		
		Assert.assertEquals("¡ﬂ∞Ìa±ﬁ", product.getProdDetail());
		Assert.assertEquals("20201010", product.getManuDate());
		Assert.assertEquals(100, product.getPrice());
		Assert.assertEquals("macbookfile", product.getFileName());
		
		
		
		product.setProdDetail("¡ﬂ∞Ìb±ﬁ");
		product.setManuDate("20202222");
		product.setPrice(10000);
		product.setFileName("macbookfile2");
		
		productService.updateProduct(product);
		
		product = productService.getProduct("¡§«—¿Ã¿«∏∆∫œ");
		Assert.assertNotNull(product);
		
		Assert.assertEquals("¡ﬂ∞Ìb±ﬁ", product.getProdDetail());
		Assert.assertEquals("20202222", product.getManuDate());
		Assert.assertEquals(10000, product.getPrice());
		Assert.assertEquals("macbookfile2", product.getFileName());
		
		System.out.println(product);
	}

}
